/**
 * Represents an event in the application, encapsulating all relevant details
 * such as title, location, date, time, and associated metadata like poster URL and QR code data.
 * Instances of this class are used throughout the app to manage and display event information
 * to users, including providing functionalities for checking in to events.
 *
 * This class is also designed to be compatible with Room Database for easy storage and retrieval
 * from a local database, hence the use of annotations like @Entity.
 *
 * Properties include:
 * - ID: Unique identifier for the event (auto-generated by Room).
 * - Key: A unique key or identifier for the event, potentially used for operations like QR code generation.
 * - Title: The title or name of the event.
 * - Location: The venue or location where the event is taking place.
 * - Day, Month: Date of the event, split into day and month for easy sorting and filtering.
 * - Description (desc): Detailed information about what the event entails.
 * - Time: The starting time of the event.
 * - Poster URL: A link to an image or poster representing the event, used for display purposes in the UI.
 * - QR Code Data: A string that can be encoded into a QR code for event check-ins or additional information retrieval.
 * - isCheckedIn: A flag indicating whether a user has checked in to the event or not.
 *
 * The class provides getters and setters for all properties, ensuring encapsulation and data integrity.
 */

package com.mp012202200038_01.BasicEventManager;

import androidx.room.Entity;
import androidx.room.PrimaryKey;

import java.io.Serializable;

/**
 * The type Event.
 */
@Entity(tableName = "event_table")
public class Event implements Serializable {
    @PrimaryKey(autoGenerate = true)
    private int id;
    private String key;
    private String title;
    private String location;
    private String day;
    private String month;
    private String desc;
    private String time;
    private String posterUrl;
    private String qrCodeData;
    private boolean isCheckedIn;

    /**
     * Instantiates a new Event.
     */
// Empty constructor
    public Event() {}

    /**
     * Instantiates a new Event.
     *
     * @param key         the key
     * @param title       the title
     * @param location    the location
     * @param day         the day
     * @param month       the month
     * @param desc        the desc
     * @param time        the time
     * @param posterUrl   the poster url
     * @param qrCodeData  the qr code data
     * @param isCheckedIn the is checked in
     */
    public Event(String key, String title, String desc, String day, String month, String location, String time, String posterUrl, String qrCodeData, boolean isCheckedIn) {
        this.key = key;
        this.title = title;
        this.location = location;
        this.day = day;
        this.month = month;
        this.desc = desc;
        this.time = time;
        this.posterUrl = posterUrl;
        this.qrCodeData = qrCodeData;
        this.isCheckedIn = false; // default value
    }

    /**
     * Gets id.
     *
     * @return the id
     */
// Getters
    public int getId() { return id; }

    /**
     * Gets key.
     *
     * @return the key
     */
    public String getKey() { return key; }

    /**
     * Gets title.
     *
     * @return the title
     */
    public String getTitle() { return title; }

    /**
     * Gets location.
     *
     * @return the location
     */
    public String getLocation() {return location;}

    /**
     * Gets day.
     *
     * @return the day
     */
    public String getDay() { return day; }

    /**
     * Gets month.
     *
     * @return the month
     */
    public String getMonth() { return month; }

    /**
     * Gets desc.
     *
     * @return the desc
     */
    public String getDesc() { return desc; }

    /**
     * Gets time.
     *
     * @return the time
     */
    public String getTime() { return time; }

    /**
     * Gets poster url.
     *
     * @return the poster url
     */
    public String getPosterUrl() { return posterUrl; }

    /**
     * Gets qr code data.
     *
     * @return the qr code data
     */
    public String getQrCodeData() { return qrCodeData; }

    /**
     * Is checked in boolean.
     *
     * @return the boolean
     */
    public boolean isCheckedIn() {
        return isCheckedIn;
    }

    /**
     * Sets id.
     *
     * @param id the id
     */
// Setters
    public void setId(int id) { this.id = id; }

    /**
     * Sets key.
     *
     * @param key the key
     */
    public void setKey(String key) { this.key = key; }

    /**
     * Sets title.
     *
     * @param title the title
     */
    public void setTitle(String title) { this.title = title; }

    /**
     * Sets location.
     *
     * @param location the location
     */
    public void setLocation(String location) {this.location = location;}

    /**
     * Sets day.
     *
     * @param day the day
     */
    public void setDay(String day) { this.day = day; }

    /**
     * Sets month.
     *
     * @param month the month
     */
    public void setMonth(String month) { this.month = month; }

    /**
     * Sets desc.
     *
     * @param desc the desc
     */
    public void setDesc(String desc) { this.desc = desc; }

    /**
     * Sets time.
     *
     * @param time the time
     */
    public void setTime(String time) { this.time = time; }

    /**
     * Sets poster url.
     *
     * @param posterUrl the poster url
     */
    public void setPosterUrl(String posterUrl) { this.posterUrl = posterUrl; }

    /**
     * Sets qr code data.
     *
     * @param qrCodeData the qr code data
     */
    public void setQrCodeData(String qrCodeData) { this.qrCodeData = qrCodeData; }

    /**
     * Sets is checked in.
     *
     * @param isCheckedIn the is checked in
     */
    public void setIsCheckedIn(boolean isCheckedIn) { this.isCheckedIn = isCheckedIn; }
}